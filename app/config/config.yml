imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AdminBundle/Resources/config/services.yml" }
    - { resource: "@ProductBundle/Resources/config/services.yml" }
    - { resource: "@ImageBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - AppBundle:Form:form_layout.html.twig

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: UserBundle\Entity\User
    registration:
        form:
            type: UserBundle\Form\RegistrationType
        confirmation:
            enabled: true
            from_email:
                address:        noreply@noname.com
                sender_name:    NoName Inscription


    profile:
        form:
            type: UserBundle\Form\ProfileFormType
    from_email:
        address:        noreply@noname.com
        sender_name:    NoName :)

hwi_oauth:
    connect:
        account_connector: oauth.user_provider
    firewall_names: [main]
    fosub:
        username_iterations: 30
        properties:
            facebook: facebook_id
            twitter: twitter_id
            google: google_id
    resource_owners:
        facebook:
            type: facebook
            client_id: "810322255681268"
            client_secret: "91ccd55f0a79a49b34ed782bbdf1df87"
            infos_url: "https://graph.facebook.com/me?fields=id,email,first_name,last_name,gender,locale,location,picture.type(square)"
            scope:  "public_profile,email"
            paths:
                email: email
                firstname: first_name
                lastname: last_name
                gender: gender
                profilepicture: picture.data.url
                locale: locale
            options:
                display: popup
        twitter:
            type: twitter
            client_id: %oauth.twitter.id%
            client_secret: %oauth.twitter.secret%
            scope:               ""
            paths:
                nickname: screen_name
        google:
            type: google
            client_id: %oauth.google.id%
            client_secret: %oauth.google.secret%
            scope: "email profile"
            options:
                display: popup
easy_admin:
    site_name: 'NoName'
    entities:
        User:
            class: UserBundle\Entity\User
            list:
                fields: ['username', 'firstname', 'lastname', 'email', 'roles', 'lastLogin', 'enabled']
            edit:
                fields: ['enabled', 'username', 'firstname', 'lastname', 'email', 'roles', 'lastLogin']
            new:
                fields: ['enabled', 'username', 'firstname', 'lastname', 'plainPassword', 'email', 'roles', 'lastLogin']
        Category:
            class: ProductBundle\Entity\Category
            list:
                fields: ['id', 'name', 'parent', 'slug', 'path']
            new:
                fields: ['name', 'parent']
            edit:
                fields: ['name', 'parent']
        Currency:
            class: ProductBundle\Entity\Currency
        Status:
            class: ProductBundle\Entity\Status
        Product:
            class: ProductBundle\Entity\Product
            edit:
                fields:
                    - { property: 'name' }
                    - { property: 'description' }
                    - { property: 'category' }
                    - { property: 'price' }
                    - { property: 'currency' }
                    - { property: 'status' }
                    - { property: 'user' }
                    - { property: 'images', type_options: { by_reference: false} }
            new:
                fields:
                    - { property: 'name' }
                    - { property: 'description' }
                    - { property: 'category' }
                    - { property: 'price' }
                    - { property: 'currency' }
                    - { property: 'status' }
                    - { property: 'user' }
                    - { property: 'images', type_options: { by_reference: false} }
            list:
                fields:
                    ['id', 'name', 'user', 'createdAt', 'category', 'price', 'currency', 'status']
        Image:
            class: ProductBundle\Entity\Image
            list:
                fields:
                    - { property: 'imagePath', type: 'image', base_path: /images/products }
            show:
                fields:
                    - { property: 'imagePath', type: 'image', base_path: /images/products }
            new:
                fields:
                    - { property: 'imageFile', type: 'vich_image' }
            edit:
                fields:
                    - { property: 'imageFile', type: 'vich_image' }
                    - 'product'
        Referential:
            class: ProductBundle\Entity\Referential
        ReferentialValue:
            class: ProductBundle\Entity\ReferentialValue
        Attribute:
            class: ProductBundle\Entity\Attribute
        AttributeValue:
            class: ProductBundle\Entity\AttributeValue
    design:
        menu:
            - { label: 'Site web', route: 'homepage' }
            - { label: 'Ecommerce' }
            - { label: 'Modération', route: 'admin_moderate' }
            - Product
            - Image
            - AttributeValue
            - { label: 'Utilisateur' }
            - User
            - { label: 'Référentiel' }
            - Referential
            - ReferentialValue
            - { label: 'Configuration' }
            - Category
            - Attribute
            - Status
            - Currency

lexik_currency:
    currencies:
        default: EUR              # [required] the default currency
        managed: [EUR, USD, ...]  # [required] all currencies used in your app
    currency_class: ProductBundle\Entity\Currency


fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        noname:
            client: default
            index_name: noname_%kernel.environment%
            settings:
                index:
                    analysis:
                        analyzer:
                            custom_french_analyzer:
                                type: custom
                                tokenizer: letter
                                filter: ["standard", "asciifolding", "lowercase", "french_stem", "stop_fr", "min_length_filter"]
                            custom_analyzer:
                                type: custom
                                tokenizer: letter
                                filter: ["standard", "asciifolding", "lowercase", "min_length_filter"]
                            path_analyzer:
                                type: custom
                                tokenizer: path_hierarchy
                                reverse: true
                                filter: ["lowercase", "asciifolding"]
                        filter:
                            stop_fr:
                                type: "stop"
                                stopwords: ["l", "m", "t", "qu", "n", "s", "j", "d"]
                            min_length_filter:
                                type: length
                                min: 3
            types:
                product:
                    mappings:
                        id:
                            type: integer
                        name:
                            type: string
                            boost: 3
                            analyzer: custom_french_analyzer
                        description:
                            type: string
                            boost: 1
                            analyzer: custom_french_analyzer
                        category:
                            type: string
                            analyzer: path_analyzer
                        price:
                            type: float
                        updated_at:
                            type: date
                    persistence:
                        model_to_elastica_transformer:
                            service: product.elastica.transformer
                        model: ProductBundle\Entity\Product
                        finder: ~
                        provider: ~
                        listener: ~
                        driver: orm

vich_uploader:
    db_driver: orm
    mappings:
        product_images:
            uri_prefix:         /images/products
            upload_destination: %kernel.root_dir%/../web/images/products
            namer:              vich_uploader.namer_uniqid
            directory_namer:    directory_namer.product

fos_js_routing:
    routes_to_expose: [ 'fos_user_security_login', 'product_favorite', 'product_cart', 'ajax_search', 'search', 'ajax_search_attribute_filters' ]
