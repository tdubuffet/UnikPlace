{#

 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.

#}

{% block fos_comment_comment %}
<div id="fos_comment_{{ comment.id }}" class="fos_comment_comment_show fos_comment_comment_depth_{{ depth }}" {% if parent is defined and parent is not null %}data-parent="{{ parent.id }}"{% endif %}>

    <div class="comment-avatar">
        <img alt="" src="{% if comment.author %}{{ comment.author.getGravatarImage() }}{% endif %}" class="avatar avatar-50 photo" width="50" height="50">
    </div>
    <div class="fos-comment-info-d">
        <div class="fos_comment_comment_metas">
            {% block fos_comment_comment_metas %}
                <div class="row">
                    <div class="col-md-6">
                        {% block fos_comment_comment_metas_authorline %}
                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_show_by{% endtrans %}
                            <span class="fos_comment_comment_authorname">
                        {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                        {% else %}
                            {{ comment.authorName }}
                        {% endif %}
                    </span> - {{ comment.createdAt|date('d/m/Y H:i') }}
                        {% endblock fos_comment_comment_metas_authorline %}
                    </div>

                    <div class="col-md-6 text-right">

                        {% block fos_comment_comment_metas_edit %}
                            {% if fos_comment_can_edit_comment(comment) %}
                                <button data-container="#fos_comment_comment_body_{{ comment.id }}" data-url="{{ path("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}" class="fos_comment_comment_edit_show_form btn btn-warning btn-xs">{% trans from 'FOSCommentBundle' %}fos_comment_comment_edit{% endtrans %}</button>
                            {% endif %}
                        {% endblock fos_comment_comment_metas_edit %}

                        {% block fos_comment_comment_metas_delete %}
                            {% if fos_comment_can_delete_comment(comment) %}
                                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                                    {# undelete #}
                                    <button data-url="{{ path("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="fos_comment_comment_remove btn btn-danger btn-xs">{% trans from 'FOSCommentBundle' %}fos_comment_comment_undelete{% endtrans %}</button>
                                {% else %}
                                    {# delete #}
                                    <button data-url="{{ path("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="fos_comment_comment_remove  btn btn-danger btn-xs">{% trans from 'FOSCommentBundle' %}fos_comment_comment_delete{% endtrans %}</button>
                                {% endif %}
                            {% endif %}
                        {% endblock fos_comment_comment_metas_delete %}

                        {% block fos_comment_comment_metas_voting %}
                            {% if fos_comment_can_vote(comment) %}
                                <span class="fos_comment_comment_voting">
                                    <button data-url="{{ path("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": 1}) }}" class="fos_comment_comment_vote btn btn-success btn-xs"><i class="fa fa-thumbs-up" aria-hidden="true"></i></button>
                                    <button data-url="{{ path("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": -1}) }}" class="fos_comment_comment_vote btn btn-danger btn-xs"><i class="fa fa-thumbs-down" aria-hidden="true"></i></button>
                                    <span class="fos_comment_comment_score" id="fos_comment_score_{{ comment.id }}"> - Point: {{ comment.score }}</span>
                                </span>
                            {% endif %}
                        {% endblock fos_comment_comment_metas_voting %}


                    </div>
                </div>



            {% endblock fos_comment_comment_metas %}
        </div>

        <div id="fos_comment_comment_body_{{ comment.id }}" class="fos_comment_comment_body">
            {% block fos_comment_comment_body %}
                {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                    {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                {% else %}
                    {% if comment is fos_comment_raw %}
                        {{ comment.rawBody | raw }}
                    {% else %}
                        {{ comment.body | nl2br }}
                    {% endif %}
                {% endif %}
            {% endblock fos_comment_comment_body %}
        </div>
    </div>

    {% block fos_comment_comment_children %}
        {% if view is not same as('flat') %}
            <div class="fos_comment_comment_replies">

                {% if children is defined %}
                    {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                {% endif %}

            </div>
        {% elseif view is same as('flat') and children is defined %}
            {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
        {% endif %}
    {% endblock fos_comment_comment_children %}

</div>
{% endblock fos_comment_comment %}
